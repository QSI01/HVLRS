#debug.log-request-header     = "enable"
#debug.log-response-header    = "enable"
#debug.log-request-handling   = "enable"
#debug.log-file-not-found     = "enable"
#debug.log-condition-handling = "enable"
index-file.names = ( "k.html","index.html", "default.html", "index.htm", "default.htm" )      
mimetype.assign = (
  ".pdf"          =>      "application/pdf",
  ".sig"          =>      "application/pgp-signature",
  ".spl"          =>      "application/futuresplash",
  ".class"        =>      "application/octet-stream",
  ".ps"           =>      "application/postscript",
  ".doc"          =>      "application/msword",
  ".torrent"      =>      "application/x-bittorrent",
  ".dvi"          =>      "application/x-dvi",
  ".gz"           =>      "application/x-gzip",
  ".pac"          =>      "application/x-ns-proxy-autoconfig",
  ".swf"          =>      "application/x-shockwave-flash",
  ".tar.gz"       =>      "application/x-tgz",
  ".tgz"          =>      "application/x-tgz",
  ".tar"          =>      "application/x-tar",
  ".zip"          =>      "application/zip",
  ".mp3"          =>      "audio/mpeg",
  ".m3u"          =>      "audio/x-mpegurl",
  ".wma"          =>      "audio/x-ms-wma",
  ".wax"          =>      "audio/x-ms-wax",
  ".ogg"          =>      "application/ogg",
  ".wav"          =>      "audio/x-wav",
  ".bmp"          =>      "image/bmp",
  ".gif"          =>      "image/gif",
  ".jpg"          =>      "image/jpeg",
  ".jpeg"         =>      "image/jpeg",
  ".heic"         =>      "image/jpeg",
  ".png"          =>      "image/png",
  ".tif"          =>      "image/tiff",
  ".tiff"         =>      "image/tiff",
  ".svg"          =>      "image/svg+xml",
  ".xbm"          =>      "image/x-xbitmap",
  ".xpm"          =>      "image/x-xpixmap",
  ".xwd"          =>      "image/x-xwindowdump",
  ".css"          =>      "text/css",
  ".html"         =>      "text/html",
  ".htm"          =>      "text/html",
  ".js"           =>      "text/javascript",
  ".asc"          =>      "text/plain",
  ".c"            =>      "text/plain",
  ".cpp"          =>      "text/plain",
  ".log"          =>      "text/plain",
  ".conf"         =>      "text/plain",
  ".text"         =>      "text/plain",
  ".txt"          =>      "text/plain",
  ".dtd"          =>      "text/xml",
  ".xml"          =>      "text/xml",
  ".mpeg"         =>      "video/mpeg",
  ".mpg"          =>      "video/mpeg",
  ".mov"          =>      "video/quicktime",
  ".qt"           =>      "video/quicktime",
  ".avi"          =>      "video/x-msvideo",
  ".asf"          =>      "video/x-ms-asf",
  ".asx"          =>      "video/x-ms-asf",
  ".wmv"          =>      "video/x-ms-wmv",
  ".bz2"          =>      "application/x-bzip",
  ".tbz"          =>      "application/x-bzip-compressed-tar",
  ".tar.bz2"      =>      "application/x-bzip-compressed-tar",
  ".ppt"          =>      "application/vnd.ms-powerpoint",
  ".xls"          =>      "application/vnd.ms-excel"
)
server.document-root        = "/mnt/"
#server.document-root        = "/etc/lighttpd/www/"
server.port = 80
server.network-backend = "linux-sendfile"
#server.network-backend = "linux-aio-sendfile" 
server.upload-dirs=( "/mnt" )
server.max-fds=2048
debug.log-request-handling = "enable"
debug.log-request-header = "enable"
debug.log-response-header = "enable"
#debug.log-condition-handling = "enable"
server.errorlog            = "/var/log/lighttpd/error.log"
server.breakagelog         = "/var/log/lighttpd/breakage.log"
server.name                = "www.kosam.org"
server.tag                 = "Apache 1.3.29/kosam"
server.max-keep-alive-requests = 4
server.max-keep-alive-idle = 4
server.pid-file = "/var/run/lighttpd.pid"
#server.stream-request-body = 0
#server.max-worker = 2

server.modules = (
	"mod_access",	
	"mod_redirect",
#	"mod_fastcgi",
	"mod_cgi",
	"mod_accesslog",
	"mod_openssl",
	"mod_auth",
	"mod_webdav",
	"mod_status",
	"mod_userdir",
	"mod_proxy",
	"mod_wstunnel",
#	"mod_test",
#	"mod_uploadprogress",
	"mod_magnet"
)
$SERVER["socket"]==":443" {
	ssl.engine = "enable"
	ssl.pemfile = "/etc/lighttpd/www/lighttpd.pem"
	accesslog.filename="/var/log/lighttpd/SSLaccess.log"
}
accesslog.filename ="/var/log/lighttpd/access.log"
cgi.assign = (
".cgi"=>""
)
#fastcgi.debug = 1
#fastcgi.server = (
#	"QSI.FGI" => ((
#			"host" => "127.0.0.1",
#			"port" => 1026,
#			"bin-path" => "/etc/lighttpd/www/QSI.FGI",
#			"max-procs" => 1
#	)),
#	"BAK.FGI" => ((
#			"host" => "127.0.0.1",
#			"port" => 11026,
#			"bin-path" => "/etc/lighttpd/www/BAK.FGI",
#			"max-procs" => 1
#	)),
#)
status.status-url          = "/QSI-status"
status.config-url          = "/QSI-config" 
status.statistics-url      = "/QSI-counters"
webdav.activate = "enable"
webdav.is-readonly = "disable"
# cadaver http://192.168.8.1
wstunnel.debug=1
$HTTP["url"] =~ "websockify" {
    wstunnel.server = ( "" => ( ( "host" => "127.0.0.1", "port" => "1025" ) ) )
#    wstunnel.frame-type = "soap, wamp" 
    server.stream-request-body  = 2
    server.stream-response-body = 2
}
$HTTP["url"] =~ "proxy" {
	proxy.server = ( "" => ( ( "host" => "127.0.0.1", "port" => "4321" ) ) )
    proxy.header = ( "upgrade" => "enable" )
}

server.dir-listing          = "enable"
dir-listing.encoding = "utf-8"
#$HTTP["url"] == "/share/$" {
#     dir-listing.activate = "enable" 
#   }
#$HTTP["url"] =~ "^/share/" {
#	auth.backend = "plain"
#    auth.backend.plain.userfile = "/etc/lighttpd/users"
#    auth.require = ("" => (
#        "method" => "basic",
#        "realm" => "Please Input UserName",
#        "require" => "valid-user" ))
#         }
   
