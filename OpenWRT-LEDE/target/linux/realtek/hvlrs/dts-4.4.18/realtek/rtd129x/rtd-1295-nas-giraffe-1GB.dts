/dts-v1/;
#define CONFIG_ARCH_RTD129X
#include "../../../../../include/soc/realtek/memory.h"

/memreserve/ SYS_BOOTCODE_MEMBASE       SYS_BOOTCODE_MEMSIZE        ; /* 0x00000000 ~ 0x00030000 */
/memreserve/ RPC_COMM_PHYS              RPC_COMM_SIZE               ; /* 0x0001f000 ~ 0x001fffff */
/memreserve/ ACPU_FIREWARE_PHYS         ACPU_FIREWARE_SIZE          ; /* 0x01b00000 ~ 0x01efffff */
/memreserve/ RPC_RINGBUF_PHYS           RPC_RINGBUF_SIZE            ; /* 0x01ffe000 ~ 0x02001fff */
/memreserve/ ACPU_IDMEM_PHYS            ACPU_IDMEM_SIZE             ; /* 0x10000000 ~ 0x10013fff */


#include "rtd-1295-MM.dtsi"
#include "rtd-129x-dvfs.dtsi"

/ {
	model= "Realtek_RTD1295";
	compatible = "Realtek,FPGA_v7", "Realtek,rtd-1295";

	aliases {
		serial0 = &uart0;
	};

	chosen {
		bootargs = "earlycon=uart8250,mmio32,0x98007800 console=ttyS0,115200 loglevel=7";
        compatible = "Realtek,rtk1295-cma_info";
        /* NOTE ---------------------------------------------------------------------------------------------*/
        /* <flag size base>                                                                                  */
        /* flag: reserved                                                                                    */
        /* size: unit is byte                                                                                */
        /* base: unit is byte                                                                                */
        /* --------------------------------------------------------------------------------------------------*/
        /* Array size not over 8;                                                                            */
        /* You may change the max array size in KConfig, max CMA array size is CONFIG_CMA_AREAS+1            */
        /* If cma-region-enable is enabled<1>, kernel driver will use cma-region-info to initial CMA memory. */
        /* If cma-region-enable is disabled<0>, kernel driver will use cma= to initial CMA memory.           */
        /* if both setting is loaded, cma-region-info had higher priority.                                   */
        /* --------------------------------------------------------------------------------------------------*/
        cma-region-enable = <1>;
        cma-region-info = <0x00000000 0x01000000 0x1100000>;
        /*cma-region-info = <0x00000000 0x01000000 0x12c00000>, <0x00000000 0x12c00000 0x20000000>;*/
	};

	memory {
		device_type = "memory";
		reg = <0 0x40000000>;	/* 1024 MB */
	};
	mem_remap {
        compatible = "Realtek,rtk1295-mem_remap";
        #address-cells = <1>;
        #size-cells = <1>;
        ranges;
        rbus {
            reg = <RBUS_BASE_PHYS RBUS_BASE_SIZE>;
        };
        common {
            reg = <RPC_COMM_PHYS RPC_COMM_SIZE>;
        };
        ringbuf {
            reg = <RPC_RINGBUF_PHYS RPC_RINGBUF_SIZE>;
        };
    };

	rtk_misc_gpio: rtk_misc_gpio@9801b100 {
		gpios = <&rtk_misc_gpio 8 0 0>;
		/* install button, input, default N/A */

		gpios =
		<&rtk_misc_gpio 13 0 0>,
		<&rtk_misc_gpio 14 0 0>,
		<&rtk_misc_gpio 100 0 0>;
		/* boardmodel_pin */
	};

	rtk_iso_gpio: rtk_iso_gpio@98007100 {
		//gpios = <&rtk_iso_gpio 1 1 1>;
		/*gpios = <&rtk_iso_gpio 21 1 0>;
		 igpio21, output, default low */
	};

	timer {
		clock-frequency = <27000000>;
	};

	timer0@9801b000 {
		clock-frequency = <27000000>;
	};

	uart0: serial0@98007800 {
		clock-frequency = <27000000>;
	};

	power-management{
		compatible = "Realtek,power-management";

		/* GPIO Wakeup */
		wakeup-gpio-enable = /* (0) disable (1) enable */
			<0>, /* Wakeup from BT : disable */
			<1>, /* Wakeup from WiFi : enable */
			<1>; /* Wakeup from Button : enable */
		wakeup-gpio-list = /* <&rtk_iso_gpio {num} {force input (0) } {default N/A (0)] }> */
			<&rtk_iso_gpio 14 0 0>, /* BT wakeup host pin */
			<&rtk_iso_gpio 33 0 0>, /* WiFi wakeup host pin */
			<&rtk_iso_gpio 34 0 0>; /* Button wakeup host pin */
		wakeup-gpio-activity = /* (0) active low (1) active high*/
			<0>, /* BT : low activity */
			<0>, /* Wifi : low activity */
			<0>; /* Button : low activity */
		gpio-output-change-enable = <1>,<1>,<1>; /* (0) disable (1) enable */
		gpio-output-change-list =
					<&rtk_iso_gpio 28 1 0>, /* <&rtk_iso_gpio {num} 1 {low/high}> */
					<&rtk_iso_gpio 29 1 0>, /* <&rtk_iso_gpio {num} 1 {low/high}> */
					<&rtk_iso_gpio 30 1 0>; /* <&rtk_iso_gpio {num} 1 {low/high}> */
		gpio-output-change-activity = <1>,<1>,<1>; /* (0) output low at suspend (1) output high at suspend */
	};
	gpio-keys-polled {
		compatible = "gpio-keys-polled";
		#address-cells = <1>;
		#size-cells = <0>;
		poll-interval = <20>;
		power {
			label = "power";
			gpios = <&rtk_iso_gpio 34 0 1>;
			linux,code = <0x164>;
		};
		reset {
			label = "reset";
			gpios = <&rtk_misc_gpio 60 0 1>;
			linux,code = <0x198>;
		};
	};
	gpio-leds {
		compatible = "gpio-leds";
		LED_B {
			label = "IODATA:B";
			gpios = <&rtk_iso_gpio 28 1 1>;
			default-state = "on";
			linux,default-trigger = "timer";
			linux,default-delay_on = "200";
			linux,default-delay_off = "200";
		};
		LED_R {
			label = "IODATA:R";
			gpios = <&rtk_iso_gpio 29 1 1>;
			default-state = "on";
			linux,default-trigger = "timer";
			linux,default-delay_on = "200";
			linux,default-delay_off = "200";
		};
		LED_G {
			label = "IODATA:G";
			gpios = <&rtk_iso_gpio 30 1 1>;
			default-state = "on";
			linux,default-trigger = "timer";
			linux,default-delay_on = "200";
			linux,default-delay_off = "200";
		};
	};
};
